CREATE DATABASE IF NOT EXISTS `REGISTRO`;

-- CREANDO TABLA DE PROFESORES
CREATE TABLE IF NOT EXISTS `REGISTRO`.`PROFESOR`(
	`id_pro` INT NOT NULL AUTO_INCREMENT,
	`nombre` VARCHAR(50) NOT NULL,
	`apellido` VARCHAR(50) NOT NULL,
	`ci` VARCHAR(15)NOT NULL,
	`direccion`VARCHAR(100),
	`telf` VARCHAR(12),
PRIMARY KEY (`id_pro`));

-- CREANDO TABLA ALUMNO
CREATE TABLE IF NOT EXISTS `REGISTRO`.`ALUMNO`(
	`id_alu` INT(6) NOT NULL AUTO_INCREMENT,
	`nombre` VARCHAR(40) NOT NULL,
	`apellido` VARCHAR(40) NOT NULL,
	`ci` VARCHAR(15)NOT NULL,
	`nac` DATE,
	`direccion`VARCHAR(100),
	`telf` VARCHAR(12),
PRIMARY KEY (id_alu));

-- CREANDO TABLA CURSO
CREATE TABLE IF NOT EXISTS `REGISTRO`.`CURSO`(
	`id_cur` INT(6) NOT NULL AUTO_INCREMENT,
	`curso` VARCHAR(30) NOT NULL,
PRIMARY KEY (`id_cur`));

-- CREANDO TABLA DE BLOQUES EVALUATIVOS
CREATE TABLE IF NOT EXISTS `REGISTRO`.`BLOQUE`(
	`id_blo` INT(6) NOT NULL AUTO_INCREMENT,
	`bloque` VARCHAR(30) NOT NULL,
PRIMARY KEY (`id_blo`));

-- CREANDO TABLA TIPO DE EVALUACIONES
CREATE TABLE IF NOT EXISTS `REGISTRO`.`TIPO_EV`(
	`id_tip` INT(6) NOT NULL AUTO_INCREMENT,
	`tipo` VARCHAR(30) NOT NULL,
PRIMARY KEY (id_tip));

-- CREANDO TABLA DE DIA
CREATE TABLE IF NOT EXISTS `REGISTRO`.`DIA`(
	`id_dia` INT(6) NOT NULL,
	`dia` DATE,
PRIMARY KEY (`id_dia`));

-- CREANDO TABLA MATERIA
CREATE TABLE IF NOT EXISTS `REGISTRO`.`MATERIA`(
	`id_mat` INT(6) NOT NULL AUTO_INCREMENT,
	`id_cur` INT(6) NOT NULL,
	`materia` VARCHAR(30) NOT NULL,
	`id_pro` INT(6) NOT NULL,
PRIMARY KEY (`id_mat`),
FOREIGN KEY (`id_cur`)REFERENCES `REGISTRO`.`CURSO`(`id_cur`),
FOREIGN KEY (`id_pro`)REFERENCES `REGISTRO`.`PROFESOR`(`id_pro`));

-- CREANDO TABLA TEMA
CREATE TABLE IF NOT EXISTS `REGISTRO`.`TEMA`(
	`id_tem` INT(6) NOT NULL AUTO_INCREMENT,
	`tema` VARCHAR(60) NOT NULL,
	`id_mat` INT(6) NOT NULL,
PRIMARY KEY (`id_tem`),
FOREIGN KEY (`id_mat`)REFERENCES `REGISTRO`.`MATERIA`(`id_mat`));

-- CREANDO TABLA DE ASISTENCIA
CREATE TABLE IF NOT EXISTS `REGISTRO`.`ASISTENCIA`(
	`id_dia` INT(6) NOT NULL,
	`id_alu` INT(6) NOT NULL,
	`id_mat` INT(6) NOT NULL,
	`estado` VARCHAR(1) NOT NULL,
PRIMARY KEY(`id_dia`, ,`id_alu`),
FOREIGN KEY(`id_dia`)REFERENCES `REGISTRO`.`DIA`(`id_dia`),
FOREIGN KEY(`id_alu`)REFERENCES `REGISTRO`.`ALUMNO`(`id_alu`));

-- CREANDO TABLA DE INSCRIPCION
CREATE TABLE IF NOT EXISTS `REGISTRO`.`INSCRIPCION`(
	`id_alu` INT(6) NOT NULL,
	`id_cur` INT(6) NOT NULL,
	`gestion` INT(5) NOT NULL,
PRIMARY KEY (`id_alu`,`id_cur`,`id_mat`),
FOREIGN KEY (`id_mat`)REFERENCES `REGISTRO`.`MATERIA`(`id_mat`),
FOREIGN KEY (`id_alu`)REFERENCES `REGISTRO`.`ALUMNO`(`id_alu`),
FOREIGN KEY (`id_cur`)REFERENCES `REGISTRO`.`CURSO`(`id_cur`));

-- CREANDO TABLA DE EVALUACIONES
CREATE TABLE IF NOT EXISTS `REGISTRO`.`EVALUACION`(
	`id_blo` INT(6) NOT NULL,
	`id_tip` INT(6) NOT NULL,
	`id_tem` INT(6) NOT NULL,
	`id_alu` INT(6) NOT NULL,
	`nota` INT(3) NOT NULL,
PRIMARY KEY (`id_tip`, `id_tem`, `id_alu`),
FOREIGN KEY (`id_blo`)REFERENCES `REGISTRO`.`BLOQUE`(`id_blo`),
FOREIGN KEY (`id_tip`)REFERENCES `REGISTRO`.`TIPO_EV`(`id_tip`),
FOREIGN KEY (`id_tem`)REFERENCES `REGISTRO`.`TEMA`(`id_tem`),
FOREIGN KEY (`id_alu`)REFERENCES `REGISTRO`.`ALUMNO`(`id_alu`));